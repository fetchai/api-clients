{ "openapi": "3.0.0", "info": { "title": "FastAPI", "description": "A simple fastapi application that services registered agents information", "version": "0.1.0" }, "paths": { "/internal/alive": { "get": { "tags": [ "internal" ], "summary": "Liveness Probe", "operationId": "liveness_probe_internal_alive_get", "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } } }, "x-internal": true } }, "/internal/ready": { "get": { "tags": [ "internal" ], "summary": "Readiness Probe", "operationId": "readiness_probe_internal_ready_get", "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } } }, "x-internal": true } }, "/internal/metrics": { "get": { "tags": [ "internal" ], "summary": "Metrics", "operationId": "metrics_internal_metrics_get", "responses": { "200": { "description": "Successful Response", "content": { "text/plain": { "schema": { "type": "string" } } } } }, "x-internal": true } }, "/internal/agents/{address}": { "post": { "tags": [ "internal" ], "summary": "Backdoor Register", "operationId": "backdoor_register_internal_agents__address__post", "parameters": [ { "name": "address", "in": "path", "required": true, "schema": { "type": "string", "title": "Address" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ServiceRecord" } } } }, "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } }, "x-internal": true } }, "/v1/almanac/recent": { "get": { "tags": [ "almanac" ], "summary": "Get Recently Registered Agents", "operationId": "get_recently_registered_agents", "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": { "items": { "$ref": "#/components/schemas/Agent" }, "type": "array", "title": "Response Get Recently Registered Agents" } } } } } } }, "/v1/almanac/search": { "post": { "tags": [ "almanac" ], "summary": "Search Agents", "operationId": "search_agents", "parameters": [ { "name": "page_num", "in": "query", "required": false, "schema": { "anyOf": [ { "type": "integer" }, { "type": "null" } ], "title": "Page Num" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AgentSearch" } } } }, "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": { "anyOf": [ { "$ref": "#/components/schemas/WithPagination_List_Agent__" }, { "type": "array", "items": { "$ref": "#/components/schemas/Agent" } } ], "title": "Response Search Agents" } } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/agents/{address}": { "get": { "tags": [ "almanac" ], "summary": "Get Specific Agent", "operationId": "get_agent", "parameters": [ { "name": "address", "in": "path", "required": true, "schema": { "type": "string", "title": "Address" } } ], "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/agents": { "post": { "tags": [ "almanac" ], "summary": "Register Agent", "operationId": "register_agent", "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AgentRegistrationAttestation" } } }, "required": true }, "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/agents/{agent_address}/status": { "post": { "tags": [ "almanac" ], "summary": "Update Agent Status", "operationId": "update_agent_status", "parameters": [ { "name": "agent_address", "in": "path", "required": true, "schema": { "type": "string", "title": "Agent Address" } } ], "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AgentStatusUpdate" } } } }, "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/agents/batch": { "post": { "tags": [ "almanac" ], "summary": "Register Agents Batch", "operationId": "register_agents_batch_v1_almanac_agents_batch_post", "requestBody": { "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AgentRegistrationAttestationBatch" } } }, "required": true }, "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/search/available_name": { "get": { "tags": [ "almanac" ], "summary": "Search Available Agent Name", "operationId": "search_available_agent_name", "parameters": [ { "name": "name_prefix", "in": "query", "required": true, "schema": { "type": "string", "title": "Name Prefix" } }, { "name": "network", "in": "query", "required": false, "schema": { "type": "string", "default": "testnet", "title": "Network" } } ], "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/AgentNameAvailability" }, "title": "Response Search Available Agent Name" } } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/search/domains/{address}": { "get": { "tags": [ "almanac" ], "summary": "Get Domains", "operationId": "get_domains", "parameters": [ { "name": "address", "in": "path", "required": true, "schema": { "type": "string", "title": "Address" } }, { "name": "network", "in": "query", "required": false, "schema": { "type": "string", "default": "testnet", "title": "Network" } } ], "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/DomainDetails" }, "title": "Response Get Domains" } } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/search/domain_details/{domain_name}": { "get": { "tags": [ "almanac" ], "summary": "Get Domain Details", "operationId": "get_domain_details", "parameters": [ { "name": "domain_name", "in": "path", "required": true, "schema": { "type": "string", "title": "Domain Name" } }, { "name": "network", "in": "query", "required": false, "schema": { "type": "string", "default": "testnet", "title": "Network" } } ], "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/DomainDetails" }, "title": "Response Get Domain Details" } } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/search/agents-by-domain/{domain_name}": { "get": { "tags": [ "almanac" ], "summary": "Get Agents By Domain", "operationId": "get_agents_by_domain", "parameters": [ { "name": "domain_name", "in": "path", "required": true, "schema": { "type": "string", "title": "Domain Name" } }, { "name": "network", "in": "query", "required": false, "schema": { "type": "string", "default": "testnet", "title": "Network" } } ], "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Agent" }, "title": "Response Get Agents By Domain" } } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/domains/{domain}": { "get": { "tags": [ "almanac" ], "summary": "Get Domain Record", "operationId": "get_domain_record", "parameters": [ { "name": "domain", "in": "path", "required": true, "schema": { "type": "string", "title": "Domain" } } ], "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DomainRecord" } } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/manifests": { "post": { "tags": [ "manifests" ], "summary": "Upload Manifest", "operationId": "list_manifests", "requestBody": { "content": { "application/json": { "schema": { "title": "Raw Manifest" } } }, "required": true }, "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/manifests/protocols/{protocol_digest}": { "get": { "tags": [ "manifests" ], "summary": "Get Protocol Manifest", "operationId": "get_manifest", "parameters": [ { "name": "protocol_digest", "in": "path", "required": true, "schema": { "type": "string", "pattern": "^[a-f0-9]{64}$", "title": "Protocol Digest" } } ], "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Manifest" } } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/manifests/digests/": { "get": { "tags": [ "manifests" ], "summary": "Resolve Procotol Digests", "operationId": "resolve_protocol_digest", "parameters": [ { "name": "protocol_digest", "in": "query", "required": false, "schema": { "anyOf": [ { "type": "array", "items": { "type": "string" } }, { "type": "null" } ], "title": "Protocol Digest" } } ], "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/ResolvedProtocolDigest" }, "title": "Response Resolve Protocol Digest" } } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/manifests/digests/search/": { "get": { "tags": [ "manifests" ], "summary": "Search Procotol Digests", "operationId": "search_protocol_digests", "parameters": [ { "name": "name", "in": "query", "required": false, "schema": { "anyOf": [ { "type": "string" }, { "type": "null" } ], "default": "", "title": "Name" } } ], "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": { "type": "array", "items": { "$ref": "#/components/schemas/ResolvedProtocolDigest" }, "title": "Response Search Protocol Digests" } } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } }, "/v1/almanac/manifests/models/{model_digest}": { "get": { "tags": [ "manifests" ], "summary": "Get Protocol Models", "operationId": "get_protocol_models", "parameters": [ { "name": "model_digest", "in": "path", "required": true, "schema": { "type": "string", "pattern": "^[a-f0-9]{64}$", "title": "Model Digest" } } ], "responses": { "200": { "description": "Successful Response", "content": { "application/json": { "schema": {} } } }, "422": { "description": "Validation Error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/HTTPValidationError" } } } } } } } }, "components": { "schemas": { "AddressPrefix": { "type": "string", "enum": [ "agent", "test-agent" ], "title": "AddressPrefix" }, "Agent": { "properties": { "status": { "$ref": "#/components/schemas/AgentStatus", "description": "Current operational status of the agent" }, "type": { "$ref": "#/components/schemas/AgentType", "description": "Type/category of the agent" }, "address": { "type": "string", "title": "Address", "description": "Unique blockchain address of the agent" }, "domain_name": { "anyOf": [ { "type": "string" }, { "type": "null" } ], "title": "Domain Name", "description": "Associated domain name, if available" }, "prefix": { "anyOf": [ { "$ref": "#/components/schemas/AddressPrefix" }, { "type": "null" } ], "description": "Address prefix, e.g., testnet", "default": "test-agent" }, "endpoints": { "items": { "$ref": "#/components/schemas/Endpoint-Output" }, "type": "array", "title": "Endpoints", "description": "List of agent's endpoints" }, "metadata": { "anyOf": [ { "additionalProperties": true, "type": "object" }, { "type": "null" } ], "title": "Metadata", "description": "Additional arbitrary metadata" }, "protocols": { "items": { "type": "string" }, "type": "array", "title": "Protocols", "description": "Supported protocol identifiers" }, "expiry": { "type": "string", "format": "date-time", "title": "Expiry", "description": "Expiration timestamp of the agent" }, "developer_category": { "anyOf": [ { "$ref": "#/components/schemas/DeveloperCategory" }, { "type": "null" } ], "description": "Developer-defined agent classification" }, "name": { "anyOf": [ { "type": "string" }, { "type": "null" } ], "title": "Name", "description": "Human-readable name of the agent" }, "running": { "anyOf": [ { "type": "boolean" }, { "type": "null" } ], "title": "Running", "description": "Indicates if the agent is currently running" }, "maintainer_id": { "anyOf": [ { "type": "string" }, { "type": "null" } ], "title": "Maintainer Id", "description": "Identifier of the agent maintainer" }, "username": { "anyOf": [ { "type": "string" }, { "type": "null" } ], "title": "Username", "description": "Username associated with the agent" }, "code_update_timestamp": { "anyOf": [ { "type": "string", "format": "date-time" }, { "type": "null" } ], "title": "Code Update Timestamp", "description": "Last update timestamp of the agent's code" }, "total_interactions": { "anyOf": [ { "type": "integer" }, { "type": "null" } ], "title": "Total Interactions", "description": "Total number of interactions with the agent" }, "trust_score": { "anyOf": [ { "type": "number" }, { "type": "null" } ], "title": "Trust Score", "description": "Reputation or trust score of the agent" } }, "type": "object", "required": [ "status", "type", "address", "endpoints", "protocols", "expiry" ], "title": "Agent" }, "AgentEndpoint": { "properties": { "url": { "type": "string", "title": "Url" }, "weight": { "type": "integer", "title": "Weight" } }, "type": "object", "required": [ "url", "weight" ], "title": "AgentEndpoint" }, "AgentNameAvailability": { "properties": { "name_prefix": { "type": "string", "title": "Name Prefix", "description": "Agent name prefix" }, "domain": { "type": "string", "title": "Domain", "description": "Domain associated with the name" }, "status": { "$ref": "#/components/schemas/AgentNameAvailabilityStatus", "description": "Indicates if the name is available." } }, "type": "object", "required": [ "name_prefix", "domain", "status" ], "title": "AgentNameAvailability" }, "AgentNameAvailabilityStatus": { "type": "string", "enum": [ "reserved", "available" ], "title": "AgentNameAvailabilityStatus" }, "AgentNetwork": { "type": "string", "enum": [ "mainnet", "testnet" ], "title": "AgentNetwork" }, "AgentRecord": { "properties": { "address": { "type": "string", "title": "Address", "description": "Blockchain address of the agent" }, "weight": { "type": "number", "title": "Weight", "description": "Weight assigned to the agent within the domain" } }, "type": "object", "required": [ "address", "weight" ], "title": "AgentRecord" }, "AgentRegistrationAttestation": { "properties": { "agent_identifier": { "type": "string", "title": "Agent Identifier" }, "signature": { "anyOf": [ { "type": "string" }, { "type": "null" } ], "title": "Signature" }, "timestamp": { "anyOf": [ { "type": "integer" }, { "type": "null" } ], "title": "Timestamp" }, "protocols": { "items": { "type": "string" }, "type": "array", "title": "Protocols", "description": "List of supported protocol identifiers" }, "endpoints": { "items": { "$ref": "#/components/schemas/AgentEndpoint" }, "type": "array", "title": "Endpoints", "description": "Declared service endpoints" }, "metadata": { "anyOf": [ { "additionalProperties": { "anyOf": [ { "type": "string" }, { "additionalProperties": { "type": "string" }, "type": "object" } ] }, "type": "object" }, { "type": "null" } ], "title": "Metadata", "description": "Optional metadata with string or nested key-value data" } }, "type": "object", "required": [ "agent_identifier", "protocols", "endpoints" ], "title": "AgentRegistrationAttestation" }, "AgentRegistrationAttestationBatch": { "properties": { "attestations": { "items": { "$ref": "#/components/schemas/AgentRegistrationAttestation" }, "type": "array", "title": "Attestations", "description": "Batch of agent registration attestations" } }, "type": "object", "required": [ "attestations" ], "title": "AgentRegistrationAttestationBatch" }, "AgentSearch": { "properties": { "text": { "type": "string", "title": "Text", "description": "Free-text search query" }, "protocols": { "anyOf": [ { "items": { "type": "string" }, "type": "array" }, { "type": "null" } ], "title": "Protocols", "description": "Filter by supported protocols" }, "types": { "anyOf": [ { "items": { "$ref": "#/components/schemas/AgentType" }, "type": "array" }, { "type": "null" } ], "title": "Types", "description": "Filter by agent types" }, "status": { "anyOf": [ { "items": { "$ref": "#/components/schemas/AgentStatusFilter" }, "type": "array" }, { "type": "null" } ], "title": "Status", "description": "Filter by agent status" }, "dev_categories": { "anyOf": [ { "items": { "$ref": "#/components/schemas/DeveloperCategory" }, "type": "array" }, { "type": "null" } ], "title": "Dev Categories", "description": "Filter by developer categories" }, "limit": { "anyOf": [ { "type": "integer" }, { "type": "null" } ], "title": "Limit", "description": "Maximum number of results to return" }, "network": { "anyOf": [ { "$ref": "#/components/schemas/AgentNetwork" }, { "type": "null" } ], "description": "Filter by agent network" }, "sort": { "anyOf": [ { "$ref": "#/components/schemas/SortAgents" }, { "type": "null" } ], "description": "Sorting method for results", "default": "Recent" } }, "type": "object", "required": [ "text" ], "title": "AgentSearch" }, "AgentStatus": { "type": "string", "enum": [ "active", "offline", "local" ], "title": "AgentStatus" }, "AgentStatusFilter": { "type": "string", "enum": [ "Active", "Inactive" ], "title": "AgentStatusFilter" }, "AgentStatusUpdate": { "properties": { "agent_identifier": { "type": "string", "title": "Agent Identifier" }, "signature": { "anyOf": [ { "type": "string" }, { "type": "null" } ], "title": "Signature" }, "timestamp": { "anyOf": [ { "type": "integer" }, { "type": "null" } ], "title": "Timestamp" }, "is_active": { "type": "boolean", "title": "Is Active", "description": "Indicates whether the agent is currently active" } }, "type": "object", "required": [ "agent_identifier", "is_active" ], "title": "AgentStatusUpdate" }, "AgentType": { "type": "string", "enum": [ "Local", "Hosted", "Mailbox", "Custom", "Proxy" ], "title": "AgentType" }, "DeveloperCategory": { "type": "string", "enum": [ "Community", "Verified", "FetchMember" ], "title": "DeveloperCategory" }, "DomainDetails": { "properties": { "domain_name": { "type": "string", "title": "Domain Name", "description": "Registered domain name" }, "trnsx_height": { "type": "integer", "title": "Trnsx Height", "description": "Blockchain height of the last update" }, "permissions": { "type": "string", "title": "Permissions", "description": "Serialized permissions associated with the domain" }, "account_address": { "type": "string", "title": "Account Address", "description": "Address of the domain-owning account" }, "updated_by": { "type": "string", "title": "Updated By", "description": "Identifier of the last updater" } }, "type": "object", "required": [ "domain_name", "trnsx_height", "permissions", "account_address", "updated_by" ], "title": "DomainDetails" }, "DomainRecord": { "properties": { "name": { "type": "string", "title": "Name", "description": "Name of the domain" }, "agents": { "items": { "$ref": "#/components/schemas/AgentRecord" }, "type": "array", "title": "Agents", "description": "List of agents associated with the domain" } }, "type": "object", "required": [ "name", "agents" ], "title": "DomainRecord" }, "Endpoint-Input": { "properties": { "url": { "type": "string", "title": "Url" }, "weight": { "type": "integer", "title": "Weight" } }, "type": "object", "required": [ "url", "weight" ], "title": "Endpoint" }, "Endpoint-Output": { "properties": { "url": { "type": "string", "title": "Url", "description": "Endpoint URL" }, "weight": { "type": "integer", "title": "Weight", "description": "Relative weight for load balancing or priority" } }, "type": "object", "required": [ "url", "weight" ], "title": "Endpoint" }, "HTTPValidationError": { "properties": { "detail": { "items": { "$ref": "#/components/schemas/ValidationError" }, "type": "array", "title": "Detail" } }, "type": "object", "title": "HTTPValidationError" }, "Interaction": { "properties": { "type": { "$ref": "#/components/schemas/InteractionType", "description": "Type of the interaction" }, "request": { "type": "string", "pattern": "^model:[0-9a-f]{64}$", "title": "Request", "description": "Model reference hash for the request" }, "responses": { "items": { "type": "string", "pattern": "^model:[0-9a-f]{64}$" }, "type": "array", "title": "Responses", "description": "List of model reference hashes for the responses" } }, "type": "object", "required": [ "type", "request", "responses" ], "title": "Interaction" }, "InteractionType": { "type": "string", "enum": [ "normal", "query" ], "title": "InteractionType" }, "Manifest": { "properties": { "version": { "type": "string", "pattern": "^[0-9]+\\.[0-9]+(?:\\.[0-9]+)?$", "title": "Version", "description": "Semantic version of the manifest" }, "metadata": { "$ref": "#/components/schemas/Metadata", "description": "Descriptive metadata for the manifest" }, "models": { "items": { "$ref": "#/components/schemas/Model" }, "type": "array", "title": "Models", "description": "List of included models" }, "interactions": { "items": { "$ref": "#/components/schemas/Interaction" }, "type": "array", "title": "Interactions", "description": "Defined interactions between models" }, "nodes": { "anyOf": [ { "items": { "additionalProperties": true, "type": "object" }, "type": "array" }, { "type": "null" } ], "title": "Nodes", "description": "Optional list of graph nodes" }, "edges": { "anyOf": [ { "items": { "additionalProperties": true, "type": "object" }, "type": "array" }, { "type": "null" } ], "title": "Edges", "description": "Optional list of graph edges representing relationships" } }, "type": "object", "required": [ "version", "metadata", "models", "interactions" ], "title": "Manifest" }, "Metadata": { "properties": { "name": { "type": "string", "title": "Name", "description": "Name of the model or package" }, "description": { "anyOf": [ { "type": "string" }, { "type": "null" } ], "title": "Description", "description": "Optional description of the model or package" }, "version": { "type": "string", "pattern": "^[0-9]+\\.[0-9]+(?:\\.[0-9]+)?$", "title": "Version", "description": "Semantic version of the metadata" }, "digest": { "type": "string", "pattern": "^proto:[0-9a-f]{64}$", "title": "Digest", "description": "Content-addressed hash of the protocol definition" } }, "type": "object", "required": [ "name", "version", "digest" ], "title": "Metadata" }, "Model": { "properties": { "digest": { "type": "string", "pattern": "^model:[0-9a-f]{64}$", "title": "Digest", "description": "Content-addressed hash of the model" }, "schema": { "title": "Schema", "description": "JSON schema definition of the model" } }, "type": "object", "required": [ "digest" ], "title": "Model" }, "ResolvedProtocolDigest": { "properties": { "digest": { "type": "string", "title": "Digest" }, "name": { "type": "string", "title": "Name" }, "version": { "type": "string", "title": "Version" } }, "type": "object", "required": [ "digest", "name", "version" ], "title": "ResolvedProtocolDigest" }, "ServiceRecord": { "properties": { "agent_address": { "type": "string", "title": "Agent Address" }, "protocols": { "items": { "type": "string" }, "type": "array", "title": "Protocols" }, "endpoints": { "items": { "$ref": "#/components/schemas/Endpoint-Input" }, "type": "array", "title": "Endpoints" }, "expiry": { "type": "string", "format": "date-time", "title": "Expiry" } }, "type": "object", "required": [ "agent_address", "protocols", "endpoints", "expiry" ], "title": "ServiceRecord" }, "SortAgents": { "type": "string", "enum": [ "Recent", "TotalInteractions" ], "title": "SortAgents" }, "ValidationError": { "properties": { "loc": { "items": { "anyOf": [ { "type": "string" }, { "type": "integer" } ] }, "type": "array", "title": "Location" }, "msg": { "type": "string", "title": "Message" }, "type": { "type": "string", "title": "Error Type" } }, "type": "object", "required": [ "loc", "msg", "type" ], "title": "ValidationError" }, "WithPagination_List_Agent__": { "properties": { "objects": { "items": { "$ref": "#/components/schemas/Agent" }, "type": "array", "title": "Objects" }, "total": { "type": "integer", "title": "Total" }, "page_size": { "type": "integer", "title": "Page Size" }, "tracker_last_update": { "anyOf": [ { "type": "string", "format": "date-time" }, { "type": "null" } ], "title": "Tracker Last Update" } }, "type": "object", "required": [ "objects", "total", "page_size" ], "title": "WithPagination[List[Agent]]" } } } }
